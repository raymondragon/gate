name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]

    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22

    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up environment variables
      run: echo "CGO_ENABLED=0" >> $GITHUB_ENV

    - name: Build binaries
      run: |
        mkdir -p build/${{ matrix.os }}-${{ matrix.arch }}
        GOARCH=${{ matrix.arch }} GOOS=${{ matrix.os }} go build -v -ldflags '-w -s' -o build/${{ matrix.os }}-${{ matrix.arch }}/gate

    - name: Compress binaries
      run: |
        zip -j build/gate-${{ matrix.os }}-${{ matrix.arch }}.zip build/${{ matrix.os }}-${{ matrix.arch }}/gate

    - name: Upload release asset
      uses: actions/upload-artifact@v3
      with:
        name: gate-${{ matrix.os }}-${{ matrix.arch }}.zip
        path: build/gate-${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: build

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        files: build/**/*.zip
